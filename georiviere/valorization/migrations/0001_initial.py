# Generated by Django 3.1.14 on 2023-05-02 08:48

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import georiviere.main.models
import geotrek.authent.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authent', '0005_remove_userprofile_language'),
        ('portal', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='POICategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_insert', models.DateTimeField(auto_now_add=True, verbose_name='Insertion date')),
                ('date_update', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Update date')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
                ('structure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authent.structure', verbose_name='Related structure')),
            ],
            options={
                'verbose_name': 'POICategory',
                'verbose_name_plural': 'POICategories',
                'ordering': ['label'],
                'unique_together': {('label', 'structure')},
            },
        ),
        migrations.CreateModel(
            name='POIType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_insert', models.DateTimeField(auto_now_add=True, verbose_name='Insertion date')),
                ('date_update', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Update date')),
                ('label', models.CharField(max_length=128, verbose_name='Name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='types', to='valorization.poicategory', verbose_name='Category')),
                ('structure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authent.structure', verbose_name='Related structure')),
            ],
            options={
                'verbose_name': 'POI knowledge type',
                'verbose_name_plural': 'POI knowledge types',
                'ordering': ['label'],
                'unique_together': {('label', 'structure')},
            },
        ),
        migrations.CreateModel(
            name='POI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_insert', models.DateTimeField(auto_now_add=True, verbose_name='Insertion date')),
                ('date_update', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Update date')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='History, details,  ...', verbose_name='Description')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=2154)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pois', to='valorization.poicategory', verbose_name='Category')),
                ('portals', models.ManyToManyField(blank=True, related_name='pois', to='portal.Portal', verbose_name='Portals')),
                ('structure', models.ForeignKey(default=geotrek.authent.models.default_structure_pk, on_delete=django.db.models.deletion.CASCADE, to='authent.structure', verbose_name='Related structure')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pois', to='valorization.poitype', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'POI',
                'verbose_name_plural': 'POIs',
                'ordering': ['name'],
                'unique_together': {('name', 'structure')},
            },
            bases=(georiviere.main.models.AddPropertyBufferMixin, models.Model),
        ),
    ]
