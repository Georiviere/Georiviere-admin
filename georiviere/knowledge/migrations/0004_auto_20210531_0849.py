# Generated by Django 3.1.6 on 2021-05-31 08:49

import django.contrib.gis.db.models.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import geotrek.authent.models


class Migration(migrations.Migration):

    dependencies = [
        ('authent', '0005_remove_userprofile_language'),
        ('knowledge', '0003_auto_20210125_1725'),
    ]

    operations = [
        migrations.CreateModel(
            name='VegetationClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Vegetation class',
                'verbose_name_plural': 'Vegetation classes',
            },
        ),
        migrations.CreateModel(
            name='VegetationState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Vegetation state',
                'verbose_name_plural': 'Vegetation states',
            },
        ),
        migrations.CreateModel(
            name='VegetationThicknessType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Vegetation thickness type',
                'verbose_name_plural': 'Vegetation thickness types',
            },
        ),
        migrations.CreateModel(
            name='WorkBankEffect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Work bank effect',
                'verbose_name_plural': 'Work bank effects',
            },
        ),
        migrations.CreateModel(
            name='WorkDownStreamInfluence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Work downstream influence',
                'verbose_name_plural': 'Work downstream influences',
            },
        ),
        migrations.CreateModel(
            name='WorkFishContinuityEffect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Work fish continuity effect',
                'verbose_name_plural': 'Work fish continuity effects',
            },
        ),
        migrations.CreateModel(
            name='WorkMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Work material',
                'verbose_name_plural': 'Work materials',
            },
        ),
        migrations.CreateModel(
            name='WorkSedimentEffect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Work effect',
                'verbose_name_plural': 'Work effects',
            },
        ),
        migrations.CreateModel(
            name='WorkState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Work state',
                'verbose_name_plural': 'Work states',
            },
        ),
        migrations.CreateModel(
            name='WorkUpStreamInfluence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Work upstream influence',
                'verbose_name_plural': 'Work upstream influences',
            },
        ),
        migrations.AlterModelOptions(
            name='knowledge',
            options={'verbose_name': 'Knowledge', 'verbose_name_plural': 'Knowledges'},
        ),
        migrations.AlterModelOptions(
            name='knowledgetype',
            options={'verbose_name': 'Knowledge type', 'verbose_name_plural': 'Knowledge types'},
        ),
        migrations.AlterModelOptions(
            name='vegetation',
            options={'verbose_name': 'Vegetation', 'verbose_name_plural': 'Vegetations'},
        ),
        migrations.AlterModelOptions(
            name='vegetationstrata',
            options={'verbose_name': 'Vegetation strata', 'verbose_name_plural': 'Vegetation stratas'},
        ),
        migrations.AlterModelOptions(
            name='vegetationtype',
            options={'verbose_name': 'Vegetation type', 'verbose_name_plural': 'Vegetation types'},
        ),
        migrations.AlterModelOptions(
            name='work',
            options={'verbose_name': 'Work', 'verbose_name_plural': 'Works'},
        ),
        migrations.AlterModelOptions(
            name='worktype',
            options={'verbose_name': 'Work type', 'verbose_name_plural': 'Work types'},
        ),
        migrations.RenameField(
            model_name='knowledge',
            old_name='type',
            new_name='knowledge_type',
        ),
        migrations.RenameField(
            model_name='vegetation',
            old_name='type',
            new_name='vegetation_type',
        ),
        migrations.RenameField(
            model_name='work',
            old_name='type',
            new_name='work_type',
        ),
        migrations.RemoveField(
            model_name='knowledge',
            name='vegetation',
        ),
        migrations.RemoveField(
            model_name='knowledge',
            name='work',
        ),
        migrations.AddField(
            model_name='knowledge',
            name='date_insert',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Insertion date'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='knowledge',
            name='date_update',
            field=models.DateTimeField(auto_now=True, db_index=True, verbose_name='Update date'),
        ),
        migrations.AddField(
            model_name='knowledge',
            name='structure',
            field=models.ForeignKey(default=geotrek.authent.models.default_structure_pk, on_delete=django.db.models.deletion.CASCADE, to='authent.structure', verbose_name='Related structure'),
        ),
        migrations.AddField(
            model_name='vegetation',
            name='knowledge',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='knowledge.knowledge', verbose_name='Knowledge'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='work',
            name='knowledge',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='knowledge.knowledge', verbose_name='Knowledge'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='knowledge',
            name='code',
            field=models.CharField(blank=True, default='', max_length=50, verbose_name='Code'),
        ),
        migrations.AlterField(
            model_name='knowledge',
            name='geom',
            field=django.contrib.gis.db.models.fields.GeometryField(srid=settings.SRID),
        ),
        migrations.AlterField(
            model_name='vegetation',
            name='other_information',
            field=models.TextField(blank=True, default='', verbose_name='Other information'),
        ),
        migrations.AlterField(
            model_name='vegetation',
            name='specific_variety',
            field=models.TextField(blank=True, default='', verbose_name='Specific variety'),
        ),
        migrations.AlterField(
            model_name='work',
            name='mobility',
            field=models.TextField(blank=True, default='', verbose_name='Mobility'),
        ),
        migrations.AlterField(
            model_name='work',
            name='usage',
            field=models.TextField(blank=True, default='', verbose_name='Usage'),
        ),
        migrations.AddField(
            model_name='vegetation',
            name='thickness',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='knowledge.vegetationthicknesstype', verbose_name='Thickness type'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vegetation',
            name='vegetation_class',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='knowledge.vegetationclass', verbose_name='Vegetation Class'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='work',
            name='bank_effect',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='knowledge.workbankeffect', verbose_name='Bank effect'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='work',
            name='downstream_influence',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='knowledge.workdownstreaminfluence', verbose_name='Downsteam influence'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='work',
            name='fish_continuity_effect',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='knowledge.workfishcontinuityeffect', verbose_name='Fish Continuity effect'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='work',
            name='sediment_effect',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='knowledge.worksedimenteffect', verbose_name='Sediment effect'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='work',
            name='upstream_influence',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='knowledge.workupstreaminfluence', verbose_name='Upstream influence'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='vegetation',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge.vegetationstate', verbose_name='Vegetation state'),
        ),
        migrations.AlterField(
            model_name='work',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge.workmaterial', verbose_name='Work material'),
        ),
        migrations.AlterField(
            model_name='work',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge.workstate', verbose_name='Work state'),
        ),
    ]
