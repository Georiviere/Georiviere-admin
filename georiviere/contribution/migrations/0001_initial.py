# Generated by Django 3.1.14 on 2023-05-29 09:17

import django.contrib.gis.db.models.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import georiviere.main.models
import georiviere.watershed.mixins
import geotrek.zoning.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('portal', '0003_auto_20230515_2019'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_insert', models.DateTimeField(auto_now_add=True, verbose_name='Insertion date')),
                ('date_update', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Update date')),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(srid=settings.SRID)),
                ('name_author', models.CharField(blank=True, max_length=128, verbose_name='Name author')),
                ('first_name_author', models.CharField(blank=True, max_length=128, verbose_name='First name author')),
                ('email_author', models.EmailField(max_length=254, verbose_name='Email')),
                ('date_observation', models.DateTimeField(verbose_name="Observation's date")),
                ('description', models.TextField(blank=True, help_text='Description of the contribution', verbose_name='Description')),
                ('portal', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='contributions', to='portal.portal', verbose_name='Portal')),
            ],
            options={
                'verbose_name': 'Contribution',
                'verbose_name_plural': 'Contributions',
            },
            bases=(georiviere.watershed.mixins.WatershedPropertiesMixin, geotrek.zoning.mixins.ZoningPropertiesMixin, georiviere.main.models.AddPropertyBufferMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ContributionLandscapeElements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Sinkhole'), (2, 'Fountain'), (3, 'Chasm'), (4, 'Lesine'), (5, 'Pond'), (6, 'Losing stream'), (7, 'Resurgence')], default=1, verbose_name='Type')),
                ('contribution', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, related_name='landscape_element', to='contribution.contribution')),
            ],
            options={
                'verbose_name': 'Contribution landscape element',
                'verbose_name_plural': 'contributions landscape elements',
            },
        ),
        migrations.CreateModel(
            name='ContributionQuantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Dry'), (2, 'In the process of drying out'), (3, 'Overflow')], default=1, verbose_name='Water level type')),
                ('landmark', models.TextField(blank=True, verbose_name='Landmark')),
                ('contribution', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, related_name='quantity', to='contribution.contribution')),
            ],
            options={
                'verbose_name': 'Contribution quantity',
                'verbose_name_plural': 'contributions quantity',
            },
        ),
        migrations.CreateModel(
            name='DeadSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Dead species',
                'verbose_name_plural': 'Dead species',
            },
        ),
        migrations.CreateModel(
            name='DiseaseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Disease type',
                'verbose_name_plural': 'Disease types',
            },
        ),
        migrations.CreateModel(
            name='FishSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Fish species',
                'verbose_name_plural': 'Fish species',
            },
        ),
        migrations.CreateModel(
            name='HeritageObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Heritage observation',
                'verbose_name_plural': 'Heritage observations',
            },
        ),
        migrations.CreateModel(
            name='HeritageSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Heritage species',
                'verbose_name_plural': 'Heritage species',
            },
        ),
        migrations.CreateModel(
            name='InvasiveSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Invasive species',
                'verbose_name_plural': 'Invasive species',
            },
        ),
        migrations.CreateModel(
            name='JamType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Jam type',
                'verbose_name_plural': 'Jam types',
            },
        ),
        migrations.CreateModel(
            name='LandingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Contribution potential damage type',
                'verbose_name_plural': 'Contribution potential damage types',
            },
        ),
        migrations.CreateModel(
            name='NaturePollution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Nature pollution',
                'verbose_name_plural': 'Natures pollution',
            },
        ),
        migrations.CreateModel(
            name='SeverityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Severity type',
                'verbose_name_plural': 'Severity types',
            },
        ),
        migrations.CreateModel(
            name='TypePollution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Type pollution',
                'verbose_name_plural': 'Types pollution',
            },
        ),
        migrations.CreateModel(
            name='ContributionQuality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Algal development'), (2, 'Pollution'), (3, 'Water temperature')], default=1, verbose_name='Quality water type')),
                ('contribution', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, related_name='quality', to='contribution.contribution')),
                ('nature_pollution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.naturepollution')),
                ('type_pollution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.typepollution')),
            ],
            options={
                'verbose_name': 'Contribution quality',
                'verbose_name_plural': 'contributions quality',
            },
        ),
        migrations.CreateModel(
            name='ContributionPotentialDamage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Landing'), (2, 'Excessive cutting of riparian forest'), (3, 'Rockslides'), (4, 'Disruptive jam'), (5, 'Bank erosion'), (6, 'River bed incision (sinking)'), (7, 'Fish diseases (appearance of fish)'), (8, 'Fish mortality'), (9, 'Trampling by livestock (impacting)')], default=1, verbose_name='Type')),
                ('excessive_cutting_length', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Excessive cutting length in meters')),
                ('length_bank_erosion', models.FloatField(blank=True, default=0.0, help_text='Distance between the foot of the bank and the foot of the erosion.', null=True, verbose_name='Length bank erosoion')),
                ('bank_height', models.FloatField(blank=True, default=0.0, help_text='Bank height (measured between the foot of the bank and the top of the bank) in meters', null=True, verbose_name='Bank height')),
                ('number_death', models.IntegerField(blank=True, default=0, help_text='Number of dead individuals', null=True, verbose_name='Number death')),
                ('contribution', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, related_name='potential_damage', to='contribution.contribution')),
                ('dead_species', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.deadspecies')),
                ('disease_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.diseasetype')),
                ('jam_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.jamtype')),
                ('landing_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.landingtype')),
            ],
            options={
                'verbose_name': 'Contribution potential damage',
                'verbose_name_plural': 'contributions potential damage',
            },
        ),
        migrations.CreateModel(
            name='ContributionFaunaFlora',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Invasive species'), (2, 'Heritage species'), (3, 'Fish species')], default=1, verbose_name='Type')),
                ('home_area', models.FloatField(blank=True, default=0.0, help_text='Home area in meters', null=True, verbose_name='Home area')),
                ('number_heritage_species', models.IntegerField(blank=True, default=0, null=True, verbose_name='Number heritage species')),
                ('number_fish_species', models.IntegerField(blank=True, default=0, null=True, verbose_name='Number fish species')),
                ('contribution', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, related_name='fauna_flora', to='contribution.contribution')),
                ('fish_species', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.fishspecies')),
                ('heritage_observation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.heritageobservation')),
                ('heritage_species', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.heritagespecies')),
                ('invasive_species', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='contribution.invasivespecies')),
            ],
            options={
                'verbose_name': 'Contribution fauna-flora',
                'verbose_name_plural': 'contributions fauna-flora',
            },
        ),
        migrations.AddField(
            model_name='contribution',
            name='severity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contributions', to='contribution.severitytype', verbose_name='Severity'),
        ),
    ]
